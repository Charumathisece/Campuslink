{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sridh\\\\Desktop\\\\new\\\\client\\\\src\\\\pages\\\\Timetable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Button } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\nconst timeSlots = ['08:00-09:30', '09:30-11:00', '11:00-12:30', '12:30-14:00', '14:00-15:30', '15:30-17:00'];\nconst defaultTimetable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({\n  subject: ''\n}));\nconst getInitialData = () => {\n  const saved = localStorage.getItem('studentTimetableV2');\n  if (saved) return JSON.parse(saved);\n  return {\n    tasksByDate: {},\n    timetableByDate: {}\n  };\n};\nconst Timetable = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [taskForm, setTaskForm] = useState({\n    name: '',\n    duration: 1\n  });\n  const [step, setStep] = useState('input');\n  const [editCell, setEditCell] = useState(null); // { dayIndex, timeIndex }\n  const [form, setForm] = useState({\n    subject: ''\n  });\n  const [data, setData] = useState(getInitialData());\n\n  // Format date as yyyy-MM-dd for keying\n  const dateKey = format(selectedDate, 'yyyy-MM-dd');\n  const tasks = data.tasksByDate[dateKey] || [];\n  const timetable = data.timetableByDate[dateKey] || defaultTimetable;\n  useEffect(() => {\n    localStorage.setItem('studentTimetableV2', JSON.stringify(data));\n  }, [data]);\n  const handleEdit = (dayIndex, timeIndex) => {\n    setEditCell({\n      dayIndex,\n      timeIndex\n    });\n    setForm({\n      subject: timetable[dayIndex][timeIndex].subject\n    });\n  };\n  const handleDelete = (dayIndex, timeIndex) => {\n    const updated = timetable.map((row, d) => row.map((cell, t) => d === dayIndex && t === timeIndex ? {\n      subject: ''\n    } : cell));\n    setData(prev => ({\n      ...prev,\n      timetableByDate: {\n        ...prev.timetableByDate,\n        [dateKey]: updated\n      }\n    }));\n  };\n  const handleDialogClose = () => {\n    setEditCell(null);\n    setForm({\n      subject: ''\n    });\n  };\n  const handleFormChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSave = () => {\n    const updated = timetable.map((row, d) => row.map((cell, t) => d === editCell.dayIndex && t === editCell.timeIndex ? {\n      subject: form.subject\n    } : cell));\n    setData(prev => ({\n      ...prev,\n      timetableByDate: {\n        ...prev.timetableByDate,\n        [dateKey]: updated\n      }\n    }));\n    handleDialogClose();\n  };\n  const handleTaskFormChange = e => {\n    setTaskForm({\n      ...taskForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddTask = () => {\n    if (!taskForm.name.trim() || !taskForm.duration) return;\n    setData(prev => {\n      const prevTasks = prev.tasksByDate[dateKey] || [];\n      return {\n        ...prev,\n        tasksByDate: {\n          ...prev.tasksByDate,\n          [dateKey]: [...prevTasks, {\n            name: taskForm.name.trim(),\n            duration: Number(taskForm.duration)\n          }]\n        }\n      };\n    });\n    setTaskForm({\n      name: '',\n      duration: 1\n    });\n  };\n  const handleDeleteTask = idx => {\n    setData(prev => {\n      const prevTasks = prev.tasksByDate[dateKey] || [];\n      return {\n        ...prev,\n        tasksByDate: {\n          ...prev.tasksByDate,\n          [dateKey]: prevTasks.filter((_, i) => i !== idx)\n        }\n      };\n    });\n  };\n  const handleGenerateTimetable = () => {\n    let flatSlots = [];\n    for (let d = 0; d < days.length; d++) {\n      for (let t = 0; t < timeSlots.length; t++) {\n        flatSlots.push({\n          d,\n          t\n        });\n      }\n    }\n    let slotIdx = 0;\n    const newTable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({\n      subject: ''\n    }));\n    for (const task of tasks) {\n      for (let i = 0; i < task.duration && slotIdx < flatSlots.length; i++) {\n        const {\n          d,\n          t\n        } = flatSlots[slotIdx++];\n        newTable[d][t] = {\n          subject: task.name\n        };\n      }\n    }\n    setData(prev => ({\n      ...prev,\n      timetableByDate: {\n        ...prev.timetableByDate,\n        [dateKey]: newTable\n      }\n    }));\n    setStep('timetable');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      background: 'linear-gradient(135deg, #f8fafc 0%, #e0eafc 100%)',\n      minHeight: '100vh',\n      py: 6\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          borderRadius: 5,\n          boxShadow: 6,\n          p: 4,\n          background: 'rgba(255,255,255,0.98)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 800,\n            color: '#1a237e',\n            letterSpacing: 1,\n            mb: 1\n          },\n          children: \"Time Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 4,\n            fontSize: 18\n          },\n          children: \"Select a date, assign tasks, and generate your timetable for that day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: {\n              xs: 'column',\n              md: 'row'\n            },\n            gap: 4,\n            alignItems: 'flex-start',\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DateCalendar, {\n              value: selectedDate,\n              onChange: setSelectedDate,\n              sx: {\n                maxWidth: 340,\n                borderRadius: 3,\n                boxShadow: 2,\n                background: '#f8fafc'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: 1\n            },\n            children: [step === 'input' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 700,\n                  mb: 2,\n                  color: '#3949ab'\n                },\n                children: [\"Tasks for \", dateKey]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                alignItems: \"center\",\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 5,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Task Name\",\n                    name: \"name\",\n                    value: taskForm.name,\n                    onChange: handleTaskFormChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 8,\n                  sm: 4,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Duration (slots)\",\n                    name: \"duration\",\n                    type: \"number\",\n                    value: taskForm.duration,\n                    onChange: handleTaskFormChange,\n                    fullWidth: true,\n                    inputProps: {\n                      min: 1,\n                      max: days.length * timeSlots.length\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  sm: 2,\n                  md: 2,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleAddTask,\n                    sx: {\n                      height: '100%',\n                      fontWeight: 600\n                    },\n                    children: \"Add Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: tasks.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    sx: {\n                      fontWeight: 600,\n                      mb: 1\n                    },\n                    children: \"Tasks to Schedule:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 1,\n                    children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      sm: 6,\n                      md: 4,\n                      children: /*#__PURE__*/_jsxDEV(Card, {\n                        sx: {\n                          p: 2,\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'space-between',\n                          borderRadius: 3,\n                          boxShadow: 2\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                            children: task.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 163,\n                            columnNumber: 39\n                          }, this), \" (\", task.duration, \" slot\", task.duration > 1 ? 's' : '', \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 163,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"error\",\n                          size: \"small\",\n                          onClick: () => handleDeleteTask(idx),\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 31\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"success\",\n                onClick: handleGenerateTimetable,\n                disabled: tasks.length === 0,\n                sx: {\n                  mt: 2,\n                  fontWeight: 700,\n                  fontSize: 18,\n                  px: 4\n                },\n                children: \"Generate Timetable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), step === 'timetable' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                sx: {\n                  borderRadius: 3,\n                  boxShadow: 2,\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      sx: {\n                        background: 'linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%)'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 700,\n                          fontSize: 17,\n                          color: '#263238'\n                        },\n                        children: \"Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 27\n                      }, this), days.map((day, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        sx: {\n                          fontWeight: 700,\n                          fontSize: 17,\n                          color: '#263238'\n                        },\n                        children: day\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: timeSlots.map((time, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600,\n                          fontSize: 15,\n                          background: '#f0f4fa'\n                        },\n                        children: time\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 29\n                      }, this), days.map((_, dayIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        sx: {\n                          position: 'relative',\n                          minWidth: 180,\n                          background: '#f9fbfd',\n                          border: '1px solid #e3eaf2'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: 0.5,\n                            alignItems: 'center',\n                            minHeight: 70,\n                            justifyContent: 'center'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"body2\",\n                            color: \"text.primary\",\n                            sx: {\n                              fontWeight: 600,\n                              fontSize: 15\n                            },\n                            children: timetable[dayIndex][rowIndex].subject || /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                color: '#b0b0b0'\n                              },\n                              children: \"No Class\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 197,\n                              columnNumber: 79\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 196,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              mt: 1\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                              size: \"small\",\n                              color: \"primary\",\n                              onClick: () => handleEdit(dayIndex, rowIndex),\n                              sx: {\n                                mr: 1,\n                                background: '#e3eafc',\n                                '&:hover': {\n                                  background: '#bbdefb'\n                                }\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Edit, {\n                                fontSize: \"small\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 201,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 200,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                              size: \"small\",\n                              color: \"error\",\n                              onClick: () => handleDelete(dayIndex, rowIndex),\n                              sx: {\n                                background: '#ffebee',\n                                '&:hover': {\n                                  background: '#ffcdd2'\n                                }\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Delete, {\n                                fontSize: \"small\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 204,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 203,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 33\n                        }, this)\n                      }, dayIndex, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 31\n                      }, this))]\n                    }, rowIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => setStep('input'),\n                sx: {\n                  mt: 2,\n                  fontWeight: 600\n                },\n                children: \"Back to Task Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: !!editCell,\n              onClose: handleDialogClose,\n              PaperProps: {\n                sx: {\n                  borderRadius: 4,\n                  p: 1\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                sx: {\n                  fontWeight: 700,\n                  color: '#1a237e',\n                  pb: 1\n                },\n                children: \"Edit Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                sx: {\n                  minWidth: 350,\n                  background: '#f8fafc',\n                  borderRadius: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  margin: \"dense\",\n                  label: \"Subject\",\n                  name: \"subject\",\n                  value: form.subject,\n                  onChange: handleFormChange,\n                  fullWidth: true,\n                  select: true,\n                  sx: {\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"No Class\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Mathematics\",\n                    children: \"Mathematics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Physics\",\n                    children: \"Physics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Chemistry\",\n                    children: \"Chemistry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Computer Science\",\n                    children: \"Computer Science\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Electronics\",\n                    children: \"Electronics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Lunch Break\",\n                    children: \"Lunch Break\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                sx: {\n                  background: '#f8fafc',\n                  borderBottomLeftRadius: 16,\n                  borderBottomRightRadius: 16\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleDialogClose,\n                  sx: {\n                    fontWeight: 600\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleSave,\n                  variant: \"contained\",\n                  sx: {\n                    fontWeight: 600,\n                    background: '#1976d2'\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Timetable, \"xn2mY6Qg46FF7hLuFX5gn7UGYXY=\");\n_c = Timetable;\nexport default Timetable;\n//   const [selectedDate, setSelectedDate] = useState(new Date());\n//   const [taskForm, setTaskForm] = useState({ name: '', duration: 1 });\n//   const [step, setStep] = useState('input');\n//   const [editCell, setEditCell] = useState(null); // { dayIndex, timeIndex }\n//   const [form, setForm] = useState({ subject: '' });\n//   const [data, setData] = useState(getInitialData());\n\n//   // Format date as yyyy-MM-dd for keying\n//   const dateKey = format(selectedDate, 'yyyy-MM-dd');\n//   const tasks = data.tasksByDate[dateKey] || [];\n//   const timetable = data.timetableByDate[dateKey] || defaultTimetable;\n\n//   useEffect(() => {\n//     localStorage.setItem('studentTimetableV2', JSON.stringify(data));\n//   }, [data]);\n\n//   const handleEdit = (dayIndex, timeIndex) => {\n//     setEditCell({ dayIndex, timeIndex });\n//     setForm({ subject: timetable[dayIndex][timeIndex].subject });\n//   };\n\n//   const handleDelete = (dayIndex, timeIndex) => {\n//     const updated = timetable.map((row, d) =>\n//       row.map((cell, t) => (d === dayIndex && t === timeIndex ? { subject: '' } : cell))\n//     );\n//     setData(prev => ({\n//       ...prev,\n//       timetableByDate: { ...prev.timetableByDate, [dateKey]: updated }\n//     }));\n//   };\n\n//   const handleDialogClose = () => {\n//     setEditCell(null);\n//     setForm({ subject: '' });\n//   };\n\n//   const handleFormChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSave = () => {\n//     const updated = timetable.map((row, d) =>\n//       row.map((cell, t) => (d === editCell.dayIndex && t === editCell.timeIndex ? { subject: form.subject } : cell))\n//     );\n//     setData(prev => ({\n//       ...prev,\n//       timetableByDate: { ...prev.timetableByDate, [dateKey]: updated }\n//     }));\n//     handleDialogClose();\n//   };\n\n//   const handleTaskFormChange = (e) => {\n//     setTaskForm({ ...taskForm, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAddTask = () => {\n//     if (!taskForm.name.trim() || !taskForm.duration) return;\n//     setData(prev => {\n//       const prevTasks = prev.tasksByDate[dateKey] || [];\n//       return {\n//         ...prev,\n//         tasksByDate: {\n//           ...prev.tasksByDate,\n//           [dateKey]: [...prevTasks, { name: taskForm.name.trim(), duration: Number(taskForm.duration) }]\n//         }\n//       };\n//     });\n//     setTaskForm({ name: '', duration: 1 });\n//   };\n\n//   const handleDeleteTask = (idx) => {\n//     setData(prev => {\n//       const prevTasks = prev.tasksByDate[dateKey] || [];\n//       return {\n//         ...prev,\n//         tasksByDate: {\n//           ...prev.tasksByDate,\n//           [dateKey]: prevTasks.filter((_, i) => i !== idx)\n//         }\n//       };\n//     });\n//   };\n\n//   const handleGenerateTimetable = () => {\n//     let flatSlots = [];\n//     for (let d = 0; d < days.length; d++) {\n//       for (let t = 0; t < timeSlots.length; t++) {\n//         flatSlots.push({ d, t });\n//       }\n//     }\n//     let slotIdx = 0;\n//     const newTable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({ subject: '' }));\n//     for (const task of tasks) {\n//       for (let i = 0; i < task.duration && slotIdx < flatSlots.length; i++) {\n//         const { d, t } = flatSlots[slotIdx++];\n//         newTable[d][t] = { subject: task.name };\n//       }\n//     }\n//     setData(prev => ({\n//       ...prev,\n//       timetableByDate: { ...prev.timetableByDate, [dateKey]: newTable }\n//     }));\n//     setStep('timetable');\n//   };\n\n//   return (\n//     <Box sx={{ background: 'linear-gradient(135deg, #f8fafc 0%, #e0eafc 100%)', minHeight: '100vh', py: 6 }}>\n//       <Container maxWidth=\"lg\">\n//         <Card sx={{ borderRadius: 5, boxShadow: 6, p: 4, background: 'rgba(255,255,255,0.98)' }}>\n//           <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 800, color: '#1a237e', letterSpacing: 1, mb: 1 }}>\n//             Time Scheduler\n//           </Typography>\n//           <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 4, fontSize: 18 }}>\n//             Select a date, assign tasks, and generate your timetable for that day\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 4, alignItems: 'flex-start', mb: 4 }}>\n//             <LocalizationProvider dateAdapter={AdapterDateFns}>\n//               <DateCalendar value={selectedDate} onChange={setSelectedDate} sx={{ maxWidth: 340, borderRadius: 3, boxShadow: 2, background: '#f8fafc' }} />\n//             </LocalizationProvider>\n//             <Box sx={{ flex: 1 }}>\n//               {step === 'input' && (\n//                 <>\n//                   <Typography variant=\"h6\" sx={{ fontWeight: 700, mb: 2, color: '#3949ab' }}>Tasks for {dateKey}</Typography>\n//                   <Grid container spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\n//                     <Grid item xs={12} sm={6} md={5}>\n//                       <TextField label=\"Task Name\" name=\"name\" value={taskForm.name} onChange={handleTaskFormChange} fullWidth />\n//                     </Grid>\n//                     <Grid item xs={8} sm={4} md={3}>\n//                       <TextField label=\"Duration (slots)\" name=\"duration\" type=\"number\" value={taskForm.duration} onChange={handleTaskFormChange} fullWidth inputProps={{ min: 1, max: days.length * timeSlots.length }} />\n//                     </Grid>\n//                     <Grid item xs={4} sm={2} md={2}>\n//                       <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask} sx={{ height: '100%', fontWeight: 600 }}>Add Task</Button>\n//                     </Grid>\n//                   </Grid>\n//                   <Box sx={{ mb: 2 }}>\n//                     {tasks.length > 0 && (\n//                       <Box>\n//                         <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>Tasks to Schedule:</Typography>\n//                         <Grid container spacing={1}>\n//                           {tasks.map((task, idx) => (\n//                             <Grid item key={idx} xs={12} sm={6} md={4}>\n//                               <Card sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between', borderRadius: 3, boxShadow: 2 }}>\n//                                 <span><b>{task.name}</b> ({task.duration} slot{task.duration > 1 ? 's' : ''})</span>\n//                                 <Button color=\"error\" size=\"small\" onClick={() => handleDeleteTask(idx)}>Delete</Button>\n//                               </Card>\n//                             </Grid>\n//                           ))}\n//                         </Grid>\n//                       </Box>\n//                     )}\n//                   </Box>\n//                   <Button variant=\"contained\" color=\"success\" onClick={handleGenerateTimetable} disabled={tasks.length === 0} sx={{ mt: 2, fontWeight: 700, fontSize: 18, px: 4 }}>\n//                     Generate Timetable\n//                   </Button>\n//                 </>\n//               )}\n//               {step === 'timetable' && (\n//                 <>\n//                   <TableContainer component={Paper} sx={{ borderRadius: 3, boxShadow: 2, mb: 2 }}>\n//                     <Table>\n//                       <TableHead>\n//                         <TableRow sx={{ background: 'linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%)' }}>\n//                           <TableCell sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>Time</TableCell>\n//                           {days.map((day, index) => (\n//                             <TableCell key={index} align=\"center\" sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>{day}</TableCell>\n//                           ))}\n//                         </TableRow>\n//                       </TableHead>\n//                       <TableBody>\n//                         {timeSlots.map((time, rowIndex) => (\n//                           <TableRow key={rowIndex}>\n//                             <TableCell sx={{ fontWeight: 600, fontSize: 15, background: '#f0f4fa' }}>{time}</TableCell>\n//                             {days.map((_, dayIndex) => (\n//                               <TableCell key={dayIndex} align=\"center\" sx={{ position: 'relative', minWidth: 180, background: '#f9fbfd', border: '1px solid #e3eaf2' }}>\n//                                 <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, alignItems: 'center', minHeight: 70, justifyContent: 'center' }}>\n//                                   <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: 15 }}>\n//                                     {timetable[dayIndex][rowIndex].subject || <span style={{ color: '#b0b0b0' }}>No Class</span>}\n//                                   </Typography>\n//                                   <Box sx={{ mt: 1 }}>\n//                                     <IconButton size=\"small\" color=\"primary\" onClick={() => handleEdit(dayIndex, rowIndex)} sx={{ mr: 1, background: '#e3eafc', '&:hover': { background: '#bbdefb' } }}>\n//                                       <Edit fontSize=\"small\" />\n//                                     </IconButton>\n//                                     <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(dayIndex, rowIndex)} sx={{ background: '#ffebee', '&:hover': { background: '#ffcdd2' } }}>\n//                                       <Delete fontSize=\"small\" />\n//                                     </IconButton>\n//                                   </Box>\n//                                 </Box>\n//                               </TableCell>\n//                             ))}\n//                           </TableRow>\n//                         ))}\n//                       </TableBody>\n//                     </Table>\n//                   </TableContainer>\n//                   <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep('input')} sx={{ mt: 2, fontWeight: 600 }}>\n//                     Back to Task Input\n//                   </Button>\n//                 </>\n//               )}\n//               {/* Edit Dialog */}\n//               <Dialog open={!!editCell} onClose={handleDialogClose} PaperProps={{ sx: { borderRadius: 4, p: 1 } }}>\n//                 <DialogTitle sx={{ fontWeight: 700, color: '#1a237e', pb: 1 }}>Edit Schedule</DialogTitle>\n//                 <DialogContent sx={{ minWidth: 350, background: '#f8fafc', borderRadius: 2 }}>\n//                   <TextField\n//                     margin=\"dense\"\n//                     label=\"Subject\"\n//                     name=\"subject\"\n//                     value={form.subject}\n//                     onChange={handleFormChange}\n//                     fullWidth\n//                     select\n//                     sx={{ mb: 2 }}\n//                   >\n//                     <MenuItem value=\"\">No Class</MenuItem>\n//                     <MenuItem value=\"Mathematics\">Mathematics</MenuItem>\n//                     <MenuItem value=\"Physics\">Physics</MenuItem>\n//                     <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n//                     <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n//                     <MenuItem value=\"Electronics\">Electronics</MenuItem>\n//                     <MenuItem value=\"Lunch Break\">Lunch Break</MenuItem>\n//                   </TextField>\n//                 </DialogContent>\n//                 <DialogActions sx={{ background: '#f8fafc', borderBottomLeftRadius: 16, borderBottomRightRadius: 16 }}>\n//                   <Button onClick={handleDialogClose} sx={{ fontWeight: 600 }}>Cancel</Button>\n//                   <Button onClick={handleSave} variant=\"contained\" sx={{ fontWeight: 600, background: '#1976d2' }}>Save</Button>\n//                 </DialogActions>\n//               </Dialog>\n//             </Box>\n//           </Box>\n//         </Card>\n//       </Container>\n//     </Box>\n//   );\n// };\n\n//   const handleGenerateTimetable = () => {\n//     // Simple greedy fill: assign tasks in order to slots\n//     let flatSlots = [];\n//     for (let d = 0; d < days.length; d++) {\n//       for (let t = 0; t < timeSlots.length; t++) {\n//         flatSlots.push({ d, t });\n//       }\n//     }\n//     let slotIdx = 0;\n//     const newTable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({ subject: '' }));\n//     for (const task of tasks) {\n//       for (let i = 0; i < task.duration && slotIdx < flatSlots.length; i++) {\n//         const { d, t } = flatSlots[slotIdx++];\n//         newTable[d][t] = { subject: task.name };\n//       }\n//     }\n//     setTimetable(newTable);\n//     setStep('timetable');\n//   };\n\n//   return (\n//     <Box sx={{ background: 'linear-gradient(135deg, #f8fafc 0%, #e0eafc 100%)', minHeight: '100vh', py: 6 }}>\n//       <Container maxWidth=\"lg\">\n//         <Card sx={{ borderRadius: 5, boxShadow: 6, p: 4, background: 'rgba(255,255,255,0.98)' }}>\n//           <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 800, color: '#1a237e', letterSpacing: 1, mb: 1 }}>\n//             Time Scheduler\n//           </Typography>\n//           <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 4, fontSize: 18 }}>\n//             Schedule your tasks and generate your weekly timetable\n//           </Typography>\n//           {step === 'input' && (\n//             <Box>\n//               <Typography variant=\"h6\" sx={{ fontWeight: 700, mb: 2, color: '#3949ab' }}>Add Tasks to Schedule</Typography>\n//               <Grid container spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\n//                 <Grid item xs={12} sm={6} md={5}>\n//                   <TextField label=\"Task Name\" name=\"name\" value={taskForm.name} onChange={handleTaskFormChange} fullWidth />\n//                 </Grid>\n//                 <Grid item xs={8} sm={4} md={3}>\n//                   <TextField label=\"Duration (slots)\" name=\"duration\" type=\"number\" value={taskForm.duration} onChange={handleTaskFormChange} fullWidth inputProps={{ min: 1, max: days.length * timeSlots.length }} />\n//                 </Grid>\n//                 <Grid item xs={4} sm={2} md={2}>\n//                   <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask} sx={{ height: '100%', fontWeight: 600 }}>Add Task</Button>\n//                 </Grid>\n//               </Grid>\n//               <Box sx={{ mb: 2 }}>\n//                 {tasks.length > 0 && (\n//                   <Box>\n//                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>Tasks to Schedule:</Typography>\n//                     <Grid container spacing={1}>\n//                       {tasks.map((task, idx) => (\n//                         <Grid item key={idx} xs={12} sm={6} md={4}>\n//                           <Card sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between', borderRadius: 3, boxShadow: 2 }}>\n//                             <span><b>{task.name}</b> ({task.duration} slot{task.duration > 1 ? 's' : ''})</span>\n//                             <Button color=\"error\" size=\"small\" onClick={() => handleDeleteTask(idx)}>Delete</Button>\n//                           </Card>\n//                         </Grid>\n//                       ))}\n//                     </Grid>\n//                   </Box>\n//                 )}\n//               </Box>\n//               <Button variant=\"contained\" color=\"success\" onClick={handleGenerateTimetable} disabled={tasks.length === 0} sx={{ mt: 2, fontWeight: 700, fontSize: 18, px: 4 }}>\n//                 Generate Timetable\n//               </Button>\n//             </Box>\n//           )}\n//           {step === 'timetable' && (\n//             <>\n//               {/* Calendar View */}\n//               <Box sx={{ display: 'flex', justifyContent: 'center', mb: 4 }}>\n//                 <LocalizationProvider dateAdapter={AdapterDateFns}>\n//                   <DateCalendar readOnly disableHighlightToday sx={{ maxWidth: 340, borderRadius: 3, boxShadow: 2, background: '#f8fafc' }} />\n//                 </LocalizationProvider>\n//               </Box>\n//               <TableContainer component={Paper} sx={{ borderRadius: 3, boxShadow: 2, mb: 2 }}>\n//                 <Table>\n//                   <TableHead>\n//                     <TableRow sx={{ background: 'linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%)' }}>\n//                       <TableCell sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>Time</TableCell>\n//                       {days.map((day, index) => (\n//                         <TableCell key={index} align=\"center\" sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>{day}</TableCell>\n//                       ))}\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody>\n//                     {timeSlots.map((time, rowIndex) => (\n//                       <TableRow key={rowIndex}>\n//                         <TableCell sx={{ fontWeight: 600, fontSize: 15, background: '#f0f4fa' }}>{time}</TableCell>\n//                         {days.map((_, dayIndex) => (\n//                           <TableCell key={dayIndex} align=\"center\" sx={{ position: 'relative', minWidth: 180, background: '#f9fbfd', border: '1px solid #e3eaf2' }}>\n//                             <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, alignItems: 'center', minHeight: 70, justifyContent: 'center' }}>\n//                               <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: 15 }}>\n//                                 {timetable[dayIndex][rowIndex].subject || <span style={{ color: '#b0b0b0' }}>No Class</span>}\n//                               </Typography>\n//                               <Box sx={{ mt: 1 }}>\n//                                 <IconButton size=\"small\" color=\"primary\" onClick={() => handleEdit(dayIndex, rowIndex)} sx={{ mr: 1, background: '#e3eafc', '&:hover': { background: '#bbdefb' } }}>\n//                                   <Edit fontSize=\"small\" />\n//                                 </IconButton>\n//                                 <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(dayIndex, rowIndex)} sx={{ background: '#ffebee', '&:hover': { background: '#ffcdd2' } }}>\n//                                   <Delete fontSize=\"small\" />\n//                                 </IconButton>\n//                               </Box>\n//                             </Box>\n//                           </TableCell>\n//                         ))}\n//                       </TableRow>\n//                     ))}\n//                   </TableBody>\n//                 </Table>\n//               </TableContainer>\n//               <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep('input')} sx={{ mt: 2, fontWeight: 600 }}>\n//                 Back to Task Input\n//               </Button>\n//             </>\n//           )}\n//           {/* Edit Dialog */}\n//           <Dialog open={!!editCell} onClose={handleDialogClose} PaperProps={{ sx: { borderRadius: 4, p: 1 } }}>\n//             <DialogTitle sx={{ fontWeight: 700, color: '#1a237e', pb: 1 }}>Edit Schedule</DialogTitle>\n//             <DialogContent sx={{ minWidth: 350, background: '#f8fafc', borderRadius: 2 }}>\n//               <TextField\n//                 margin=\"dense\"\n//                 label=\"Subject\"\n//                 name=\"subject\"\n//                 value={form.subject}\n//                 onChange={handleFormChange}\n//                 fullWidth\n//                 select\n//                 sx={{ mb: 2 }}\n//               >\n//                 <MenuItem value=\"\">No Class</MenuItem>\n//                 <MenuItem value=\"Mathematics\">Mathematics</MenuItem>\n//                 <MenuItem value=\"Physics\">Physics</MenuItem>\n//                 <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n//                 <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n//                 <MenuItem value=\"Electronics\">Electronics</MenuItem>\n//                 <MenuItem value=\"Lunch Break\">Lunch Break</MenuItem>\n//               </TextField>\n//             </DialogContent>\n//             <DialogActions sx={{ background: '#f8fafc', borderBottomLeftRadius: 16, borderBottomRightRadius: 16 }}>\n//               <Button onClick={handleDialogClose} sx={{ fontWeight: 600 }}>Cancel</Button>\n//               <Button onClick={handleSave} variant=\"contained\" sx={{ fontWeight: 600, background: '#1976d2' }}>Save</Button>\n//             </DialogActions>\n//           </Dialog>\n//         </Card>\n//       </Container>\n//     </Box>\n//   );\n// export default Timetable;\nvar _c;\n$RefreshReg$(_c, \"Timetable\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","Card","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Button","Edit","Delete","LocalizationProvider","AdapterDateFns","DateCalendar","format","jsxDEV","_jsxDEV","Fragment","_Fragment","days","timeSlots","defaultTimetable","Array","length","fill","map","subject","getInitialData","saved","localStorage","getItem","JSON","parse","tasksByDate","timetableByDate","Timetable","_s","selectedDate","setSelectedDate","Date","taskForm","setTaskForm","name","duration","step","setStep","editCell","setEditCell","form","setForm","data","setData","dateKey","tasks","timetable","setItem","stringify","handleEdit","dayIndex","timeIndex","handleDelete","updated","row","d","cell","t","prev","handleDialogClose","handleFormChange","e","target","value","handleSave","handleTaskFormChange","handleAddTask","trim","prevTasks","Number","handleDeleteTask","idx","filter","_","i","handleGenerateTimetable","flatSlots","push","slotIdx","newTable","task","sx","background","minHeight","py","children","maxWidth","borderRadius","boxShadow","p","variant","component","gutterBottom","fontWeight","color","letterSpacing","mb","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","display","flexDirection","xs","md","gap","alignItems","dateAdapter","onChange","flex","container","spacing","item","sm","label","fullWidth","type","inputProps","min","max","onClick","height","justifyContent","size","disabled","mt","px","day","index","align","time","rowIndex","position","minWidth","border","style","mr","open","onClose","PaperProps","pb","margin","select","borderBottomLeftRadius","borderBottomRightRadius","_c","$RefreshReg$"],"sources":["C:/Users/sridh/Desktop/new/client/src/pages/Timetable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Button } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { format } from 'date-fns';\n\nconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\nconst timeSlots = ['08:00-09:30', '09:30-11:00', '11:00-12:30', '12:30-14:00', '14:00-15:30', '15:30-17:00'];\n\nconst defaultTimetable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({ subject: '' }));\n\nconst getInitialData = () => {\n  const saved = localStorage.getItem('studentTimetableV2');\n  if (saved) return JSON.parse(saved);\n  return { tasksByDate: {}, timetableByDate: {} };\n};\n\nconst Timetable = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [taskForm, setTaskForm] = useState({ name: '', duration: 1 });\n  const [step, setStep] = useState('input');\n  const [editCell, setEditCell] = useState(null); // { dayIndex, timeIndex }\n  const [form, setForm] = useState({ subject: '' });\n  const [data, setData] = useState(getInitialData());\n\n  // Format date as yyyy-MM-dd for keying\n  const dateKey = format(selectedDate, 'yyyy-MM-dd');\n  const tasks = data.tasksByDate[dateKey] || [];\n  const timetable = data.timetableByDate[dateKey] || defaultTimetable;\n\n  useEffect(() => {\n    localStorage.setItem('studentTimetableV2', JSON.stringify(data));\n  }, [data]);\n\n  const handleEdit = (dayIndex, timeIndex) => {\n    setEditCell({ dayIndex, timeIndex });\n    setForm({ subject: timetable[dayIndex][timeIndex].subject });\n  };\n\n  const handleDelete = (dayIndex, timeIndex) => {\n    const updated = timetable.map((row, d) =>\n      row.map((cell, t) => (d === dayIndex && t === timeIndex ? { subject: '' } : cell))\n    );\n    setData(prev => ({\n      ...prev,\n      timetableByDate: { ...prev.timetableByDate, [dateKey]: updated }\n    }));\n  };\n\n  const handleDialogClose = () => {\n    setEditCell(null);\n    setForm({ subject: '' });\n  };\n\n  const handleFormChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSave = () => {\n    const updated = timetable.map((row, d) =>\n      row.map((cell, t) => (d === editCell.dayIndex && t === editCell.timeIndex ? { subject: form.subject } : cell))\n    );\n    setData(prev => ({\n      ...prev,\n      timetableByDate: { ...prev.timetableByDate, [dateKey]: updated }\n    }));\n    handleDialogClose();\n  };\n\n  const handleTaskFormChange = (e) => {\n    setTaskForm({ ...taskForm, [e.target.name]: e.target.value });\n  };\n\n  const handleAddTask = () => {\n    if (!taskForm.name.trim() || !taskForm.duration) return;\n    setData(prev => {\n      const prevTasks = prev.tasksByDate[dateKey] || [];\n      return {\n        ...prev,\n        tasksByDate: {\n          ...prev.tasksByDate,\n          [dateKey]: [...prevTasks, { name: taskForm.name.trim(), duration: Number(taskForm.duration) }]\n        }\n      };\n    });\n    setTaskForm({ name: '', duration: 1 });\n  };\n\n  const handleDeleteTask = (idx) => {\n    setData(prev => {\n      const prevTasks = prev.tasksByDate[dateKey] || [];\n      return {\n        ...prev,\n        tasksByDate: {\n          ...prev.tasksByDate,\n          [dateKey]: prevTasks.filter((_, i) => i !== idx)\n        }\n      };\n    });\n  };\n\n  const handleGenerateTimetable = () => {\n    let flatSlots = [];\n    for (let d = 0; d < days.length; d++) {\n      for (let t = 0; t < timeSlots.length; t++) {\n        flatSlots.push({ d, t });\n      }\n    }\n    let slotIdx = 0;\n    const newTable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({ subject: '' }));\n    for (const task of tasks) {\n      for (let i = 0; i < task.duration && slotIdx < flatSlots.length; i++) {\n        const { d, t } = flatSlots[slotIdx++];\n        newTable[d][t] = { subject: task.name };\n      }\n    }\n    setData(prev => ({\n      ...prev,\n      timetableByDate: { ...prev.timetableByDate, [dateKey]: newTable }\n    }));\n    setStep('timetable');\n  };\n\n  return (\n    <Box sx={{ background: 'linear-gradient(135deg, #f8fafc 0%, #e0eafc 100%)', minHeight: '100vh', py: 6 }}>\n      <Container maxWidth=\"lg\">\n        <Card sx={{ borderRadius: 5, boxShadow: 6, p: 4, background: 'rgba(255,255,255,0.98)' }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 800, color: '#1a237e', letterSpacing: 1, mb: 1 }}>\n            Time Scheduler\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 4, fontSize: 18 }}>\n            Select a date, assign tasks, and generate your timetable for that day\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 4, alignItems: 'flex-start', mb: 4 }}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DateCalendar value={selectedDate} onChange={setSelectedDate} sx={{ maxWidth: 340, borderRadius: 3, boxShadow: 2, background: '#f8fafc' }} />\n            </LocalizationProvider>\n            <Box sx={{ flex: 1 }}>\n              {step === 'input' && (\n                <>\n                  <Typography variant=\"h6\" sx={{ fontWeight: 700, mb: 2, color: '#3949ab' }}>Tasks for {dateKey}</Typography>\n                  <Grid container spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\n                    <Grid item xs={12} sm={6} md={5}>\n                      <TextField label=\"Task Name\" name=\"name\" value={taskForm.name} onChange={handleTaskFormChange} fullWidth />\n                    </Grid>\n                    <Grid item xs={8} sm={4} md={3}>\n                      <TextField label=\"Duration (slots)\" name=\"duration\" type=\"number\" value={taskForm.duration} onChange={handleTaskFormChange} fullWidth inputProps={{ min: 1, max: days.length * timeSlots.length }} />\n                    </Grid>\n                    <Grid item xs={4} sm={2} md={2}>\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask} sx={{ height: '100%', fontWeight: 600 }}>Add Task</Button>\n                    </Grid>\n                  </Grid>\n                  <Box sx={{ mb: 2 }}>\n                    {tasks.length > 0 && (\n                      <Box>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>Tasks to Schedule:</Typography>\n                        <Grid container spacing={1}>\n                          {tasks.map((task, idx) => (\n                            <Grid item key={idx} xs={12} sm={6} md={4}>\n                              <Card sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between', borderRadius: 3, boxShadow: 2 }}>\n                                <span><b>{task.name}</b> ({task.duration} slot{task.duration > 1 ? 's' : ''})</span>\n                                <Button color=\"error\" size=\"small\" onClick={() => handleDeleteTask(idx)}>Delete</Button>\n                              </Card>\n                            </Grid>\n                          ))}\n                        </Grid>\n                      </Box>\n                    )}\n                  </Box>\n                  <Button variant=\"contained\" color=\"success\" onClick={handleGenerateTimetable} disabled={tasks.length === 0} sx={{ mt: 2, fontWeight: 700, fontSize: 18, px: 4 }}>\n                    Generate Timetable\n                  </Button>\n                </>\n              )}\n              {step === 'timetable' && (\n                <>\n                  <TableContainer component={Paper} sx={{ borderRadius: 3, boxShadow: 2, mb: 2 }}>\n                    <Table>\n                      <TableHead>\n                        <TableRow sx={{ background: 'linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%)' }}>\n                          <TableCell sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>Time</TableCell>\n                          {days.map((day, index) => (\n                            <TableCell key={index} align=\"center\" sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>{day}</TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {timeSlots.map((time, rowIndex) => (\n                          <TableRow key={rowIndex}>\n                            <TableCell sx={{ fontWeight: 600, fontSize: 15, background: '#f0f4fa' }}>{time}</TableCell>\n                            {days.map((_, dayIndex) => (\n                              <TableCell key={dayIndex} align=\"center\" sx={{ position: 'relative', minWidth: 180, background: '#f9fbfd', border: '1px solid #e3eaf2' }}>\n                                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, alignItems: 'center', minHeight: 70, justifyContent: 'center' }}>\n                                  <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: 15 }}>\n                                    {timetable[dayIndex][rowIndex].subject || <span style={{ color: '#b0b0b0' }}>No Class</span>}\n                                  </Typography>\n                                  <Box sx={{ mt: 1 }}>\n                                    <IconButton size=\"small\" color=\"primary\" onClick={() => handleEdit(dayIndex, rowIndex)} sx={{ mr: 1, background: '#e3eafc', '&:hover': { background: '#bbdefb' } }}>\n                                      <Edit fontSize=\"small\" />\n                                    </IconButton>\n                                    <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(dayIndex, rowIndex)} sx={{ background: '#ffebee', '&:hover': { background: '#ffcdd2' } }}>\n                                      <Delete fontSize=\"small\" />\n                                    </IconButton>\n                                  </Box>\n                                </Box>\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep('input')} sx={{ mt: 2, fontWeight: 600 }}>\n                    Back to Task Input\n                  </Button>\n                </>\n              )}\n              {/* Edit Dialog */}\n              <Dialog open={!!editCell} onClose={handleDialogClose} PaperProps={{ sx: { borderRadius: 4, p: 1 } }}>\n                <DialogTitle sx={{ fontWeight: 700, color: '#1a237e', pb: 1 }}>Edit Schedule</DialogTitle>\n                <DialogContent sx={{ minWidth: 350, background: '#f8fafc', borderRadius: 2 }}>\n                  <TextField\n                    margin=\"dense\"\n                    label=\"Subject\"\n                    name=\"subject\"\n                    value={form.subject}\n                    onChange={handleFormChange}\n                    fullWidth\n                    select\n                    sx={{ mb: 2 }}\n                  >\n                    <MenuItem value=\"\">No Class</MenuItem>\n                    <MenuItem value=\"Mathematics\">Mathematics</MenuItem>\n                    <MenuItem value=\"Physics\">Physics</MenuItem>\n                    <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n                    <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n                    <MenuItem value=\"Electronics\">Electronics</MenuItem>\n                    <MenuItem value=\"Lunch Break\">Lunch Break</MenuItem>\n                  </TextField>\n                </DialogContent>\n                <DialogActions sx={{ background: '#f8fafc', borderBottomLeftRadius: 16, borderBottomRightRadius: 16 }}>\n                  <Button onClick={handleDialogClose} sx={{ fontWeight: 600 }}>Cancel</Button>\n                  <Button onClick={handleSave} variant=\"contained\" sx={{ fontWeight: 600, background: '#1976d2' }}>Save</Button>\n                </DialogActions>\n              </Dialog>\n            </Box>\n          </Box>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Timetable;\n//   const [selectedDate, setSelectedDate] = useState(new Date());\n//   const [taskForm, setTaskForm] = useState({ name: '', duration: 1 });\n//   const [step, setStep] = useState('input');\n//   const [editCell, setEditCell] = useState(null); // { dayIndex, timeIndex }\n//   const [form, setForm] = useState({ subject: '' });\n//   const [data, setData] = useState(getInitialData());\n\n//   // Format date as yyyy-MM-dd for keying\n//   const dateKey = format(selectedDate, 'yyyy-MM-dd');\n//   const tasks = data.tasksByDate[dateKey] || [];\n//   const timetable = data.timetableByDate[dateKey] || defaultTimetable;\n\n//   useEffect(() => {\n//     localStorage.setItem('studentTimetableV2', JSON.stringify(data));\n//   }, [data]);\n\n//   const handleEdit = (dayIndex, timeIndex) => {\n//     setEditCell({ dayIndex, timeIndex });\n//     setForm({ subject: timetable[dayIndex][timeIndex].subject });\n//   };\n\n//   const handleDelete = (dayIndex, timeIndex) => {\n//     const updated = timetable.map((row, d) =>\n//       row.map((cell, t) => (d === dayIndex && t === timeIndex ? { subject: '' } : cell))\n//     );\n//     setData(prev => ({\n//       ...prev,\n//       timetableByDate: { ...prev.timetableByDate, [dateKey]: updated }\n//     }));\n//   };\n\n//   const handleDialogClose = () => {\n//     setEditCell(null);\n//     setForm({ subject: '' });\n//   };\n\n//   const handleFormChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSave = () => {\n//     const updated = timetable.map((row, d) =>\n//       row.map((cell, t) => (d === editCell.dayIndex && t === editCell.timeIndex ? { subject: form.subject } : cell))\n//     );\n//     setData(prev => ({\n//       ...prev,\n//       timetableByDate: { ...prev.timetableByDate, [dateKey]: updated }\n//     }));\n//     handleDialogClose();\n//   };\n\n//   const handleTaskFormChange = (e) => {\n//     setTaskForm({ ...taskForm, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAddTask = () => {\n//     if (!taskForm.name.trim() || !taskForm.duration) return;\n//     setData(prev => {\n//       const prevTasks = prev.tasksByDate[dateKey] || [];\n//       return {\n//         ...prev,\n//         tasksByDate: {\n//           ...prev.tasksByDate,\n//           [dateKey]: [...prevTasks, { name: taskForm.name.trim(), duration: Number(taskForm.duration) }]\n//         }\n//       };\n//     });\n//     setTaskForm({ name: '', duration: 1 });\n//   };\n\n//   const handleDeleteTask = (idx) => {\n//     setData(prev => {\n//       const prevTasks = prev.tasksByDate[dateKey] || [];\n//       return {\n//         ...prev,\n//         tasksByDate: {\n//           ...prev.tasksByDate,\n//           [dateKey]: prevTasks.filter((_, i) => i !== idx)\n//         }\n//       };\n//     });\n//   };\n\n//   const handleGenerateTimetable = () => {\n//     let flatSlots = [];\n//     for (let d = 0; d < days.length; d++) {\n//       for (let t = 0; t < timeSlots.length; t++) {\n//         flatSlots.push({ d, t });\n//       }\n//     }\n//     let slotIdx = 0;\n//     const newTable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({ subject: '' }));\n//     for (const task of tasks) {\n//       for (let i = 0; i < task.duration && slotIdx < flatSlots.length; i++) {\n//         const { d, t } = flatSlots[slotIdx++];\n//         newTable[d][t] = { subject: task.name };\n//       }\n//     }\n//     setData(prev => ({\n//       ...prev,\n//       timetableByDate: { ...prev.timetableByDate, [dateKey]: newTable }\n//     }));\n//     setStep('timetable');\n//   };\n\n//   return (\n//     <Box sx={{ background: 'linear-gradient(135deg, #f8fafc 0%, #e0eafc 100%)', minHeight: '100vh', py: 6 }}>\n//       <Container maxWidth=\"lg\">\n//         <Card sx={{ borderRadius: 5, boxShadow: 6, p: 4, background: 'rgba(255,255,255,0.98)' }}>\n//           <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 800, color: '#1a237e', letterSpacing: 1, mb: 1 }}>\n//             Time Scheduler\n//           </Typography>\n//           <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 4, fontSize: 18 }}>\n//             Select a date, assign tasks, and generate your timetable for that day\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 4, alignItems: 'flex-start', mb: 4 }}>\n//             <LocalizationProvider dateAdapter={AdapterDateFns}>\n//               <DateCalendar value={selectedDate} onChange={setSelectedDate} sx={{ maxWidth: 340, borderRadius: 3, boxShadow: 2, background: '#f8fafc' }} />\n//             </LocalizationProvider>\n//             <Box sx={{ flex: 1 }}>\n//               {step === 'input' && (\n//                 <>\n//                   <Typography variant=\"h6\" sx={{ fontWeight: 700, mb: 2, color: '#3949ab' }}>Tasks for {dateKey}</Typography>\n//                   <Grid container spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\n//                     <Grid item xs={12} sm={6} md={5}>\n//                       <TextField label=\"Task Name\" name=\"name\" value={taskForm.name} onChange={handleTaskFormChange} fullWidth />\n//                     </Grid>\n//                     <Grid item xs={8} sm={4} md={3}>\n//                       <TextField label=\"Duration (slots)\" name=\"duration\" type=\"number\" value={taskForm.duration} onChange={handleTaskFormChange} fullWidth inputProps={{ min: 1, max: days.length * timeSlots.length }} />\n//                     </Grid>\n//                     <Grid item xs={4} sm={2} md={2}>\n//                       <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask} sx={{ height: '100%', fontWeight: 600 }}>Add Task</Button>\n//                     </Grid>\n//                   </Grid>\n//                   <Box sx={{ mb: 2 }}>\n//                     {tasks.length > 0 && (\n//                       <Box>\n//                         <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>Tasks to Schedule:</Typography>\n//                         <Grid container spacing={1}>\n//                           {tasks.map((task, idx) => (\n//                             <Grid item key={idx} xs={12} sm={6} md={4}>\n//                               <Card sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between', borderRadius: 3, boxShadow: 2 }}>\n//                                 <span><b>{task.name}</b> ({task.duration} slot{task.duration > 1 ? 's' : ''})</span>\n//                                 <Button color=\"error\" size=\"small\" onClick={() => handleDeleteTask(idx)}>Delete</Button>\n//                               </Card>\n//                             </Grid>\n//                           ))}\n//                         </Grid>\n//                       </Box>\n//                     )}\n//                   </Box>\n//                   <Button variant=\"contained\" color=\"success\" onClick={handleGenerateTimetable} disabled={tasks.length === 0} sx={{ mt: 2, fontWeight: 700, fontSize: 18, px: 4 }}>\n//                     Generate Timetable\n//                   </Button>\n//                 </>\n//               )}\n//               {step === 'timetable' && (\n//                 <>\n//                   <TableContainer component={Paper} sx={{ borderRadius: 3, boxShadow: 2, mb: 2 }}>\n//                     <Table>\n//                       <TableHead>\n//                         <TableRow sx={{ background: 'linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%)' }}>\n//                           <TableCell sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>Time</TableCell>\n//                           {days.map((day, index) => (\n//                             <TableCell key={index} align=\"center\" sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>{day}</TableCell>\n//                           ))}\n//                         </TableRow>\n//                       </TableHead>\n//                       <TableBody>\n//                         {timeSlots.map((time, rowIndex) => (\n//                           <TableRow key={rowIndex}>\n//                             <TableCell sx={{ fontWeight: 600, fontSize: 15, background: '#f0f4fa' }}>{time}</TableCell>\n//                             {days.map((_, dayIndex) => (\n//                               <TableCell key={dayIndex} align=\"center\" sx={{ position: 'relative', minWidth: 180, background: '#f9fbfd', border: '1px solid #e3eaf2' }}>\n//                                 <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, alignItems: 'center', minHeight: 70, justifyContent: 'center' }}>\n//                                   <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: 15 }}>\n//                                     {timetable[dayIndex][rowIndex].subject || <span style={{ color: '#b0b0b0' }}>No Class</span>}\n//                                   </Typography>\n//                                   <Box sx={{ mt: 1 }}>\n//                                     <IconButton size=\"small\" color=\"primary\" onClick={() => handleEdit(dayIndex, rowIndex)} sx={{ mr: 1, background: '#e3eafc', '&:hover': { background: '#bbdefb' } }}>\n//                                       <Edit fontSize=\"small\" />\n//                                     </IconButton>\n//                                     <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(dayIndex, rowIndex)} sx={{ background: '#ffebee', '&:hover': { background: '#ffcdd2' } }}>\n//                                       <Delete fontSize=\"small\" />\n//                                     </IconButton>\n//                                   </Box>\n//                                 </Box>\n//                               </TableCell>\n//                             ))}\n//                           </TableRow>\n//                         ))}\n//                       </TableBody>\n//                     </Table>\n//                   </TableContainer>\n//                   <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep('input')} sx={{ mt: 2, fontWeight: 600 }}>\n//                     Back to Task Input\n//                   </Button>\n//                 </>\n//               )}\n//               {/* Edit Dialog */}\n//               <Dialog open={!!editCell} onClose={handleDialogClose} PaperProps={{ sx: { borderRadius: 4, p: 1 } }}>\n//                 <DialogTitle sx={{ fontWeight: 700, color: '#1a237e', pb: 1 }}>Edit Schedule</DialogTitle>\n//                 <DialogContent sx={{ minWidth: 350, background: '#f8fafc', borderRadius: 2 }}>\n//                   <TextField\n//                     margin=\"dense\"\n//                     label=\"Subject\"\n//                     name=\"subject\"\n//                     value={form.subject}\n//                     onChange={handleFormChange}\n//                     fullWidth\n//                     select\n//                     sx={{ mb: 2 }}\n//                   >\n//                     <MenuItem value=\"\">No Class</MenuItem>\n//                     <MenuItem value=\"Mathematics\">Mathematics</MenuItem>\n//                     <MenuItem value=\"Physics\">Physics</MenuItem>\n//                     <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n//                     <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n//                     <MenuItem value=\"Electronics\">Electronics</MenuItem>\n//                     <MenuItem value=\"Lunch Break\">Lunch Break</MenuItem>\n//                   </TextField>\n//                 </DialogContent>\n//                 <DialogActions sx={{ background: '#f8fafc', borderBottomLeftRadius: 16, borderBottomRightRadius: 16 }}>\n//                   <Button onClick={handleDialogClose} sx={{ fontWeight: 600 }}>Cancel</Button>\n//                   <Button onClick={handleSave} variant=\"contained\" sx={{ fontWeight: 600, background: '#1976d2' }}>Save</Button>\n//                 </DialogActions>\n//               </Dialog>\n//             </Box>\n//           </Box>\n//         </Card>\n//       </Container>\n//     </Box>\n//   );\n// };\n\n//   const handleGenerateTimetable = () => {\n//     // Simple greedy fill: assign tasks in order to slots\n//     let flatSlots = [];\n//     for (let d = 0; d < days.length; d++) {\n//       for (let t = 0; t < timeSlots.length; t++) {\n//         flatSlots.push({ d, t });\n//       }\n//     }\n//     let slotIdx = 0;\n//     const newTable = Array(days.length).fill().map(() => Array(timeSlots.length).fill({ subject: '' }));\n//     for (const task of tasks) {\n//       for (let i = 0; i < task.duration && slotIdx < flatSlots.length; i++) {\n//         const { d, t } = flatSlots[slotIdx++];\n//         newTable[d][t] = { subject: task.name };\n//       }\n//     }\n//     setTimetable(newTable);\n//     setStep('timetable');\n//   };\n\n\n//   return (\n//     <Box sx={{ background: 'linear-gradient(135deg, #f8fafc 0%, #e0eafc 100%)', minHeight: '100vh', py: 6 }}>\n//       <Container maxWidth=\"lg\">\n//         <Card sx={{ borderRadius: 5, boxShadow: 6, p: 4, background: 'rgba(255,255,255,0.98)' }}>\n//           <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ fontWeight: 800, color: '#1a237e', letterSpacing: 1, mb: 1 }}>\n//             Time Scheduler\n//           </Typography>\n//           <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mb: 4, fontSize: 18 }}>\n//             Schedule your tasks and generate your weekly timetable\n//           </Typography>\n//           {step === 'input' && (\n//             <Box>\n//               <Typography variant=\"h6\" sx={{ fontWeight: 700, mb: 2, color: '#3949ab' }}>Add Tasks to Schedule</Typography>\n//               <Grid container spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\n//                 <Grid item xs={12} sm={6} md={5}>\n//                   <TextField label=\"Task Name\" name=\"name\" value={taskForm.name} onChange={handleTaskFormChange} fullWidth />\n//                 </Grid>\n//                 <Grid item xs={8} sm={4} md={3}>\n//                   <TextField label=\"Duration (slots)\" name=\"duration\" type=\"number\" value={taskForm.duration} onChange={handleTaskFormChange} fullWidth inputProps={{ min: 1, max: days.length * timeSlots.length }} />\n//                 </Grid>\n//                 <Grid item xs={4} sm={2} md={2}>\n//                   <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask} sx={{ height: '100%', fontWeight: 600 }}>Add Task</Button>\n//                 </Grid>\n//               </Grid>\n//               <Box sx={{ mb: 2 }}>\n//                 {tasks.length > 0 && (\n//                   <Box>\n//                     <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>Tasks to Schedule:</Typography>\n//                     <Grid container spacing={1}>\n//                       {tasks.map((task, idx) => (\n//                         <Grid item key={idx} xs={12} sm={6} md={4}>\n//                           <Card sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between', borderRadius: 3, boxShadow: 2 }}>\n//                             <span><b>{task.name}</b> ({task.duration} slot{task.duration > 1 ? 's' : ''})</span>\n//                             <Button color=\"error\" size=\"small\" onClick={() => handleDeleteTask(idx)}>Delete</Button>\n//                           </Card>\n//                         </Grid>\n//                       ))}\n//                     </Grid>\n//                   </Box>\n//                 )}\n//               </Box>\n//               <Button variant=\"contained\" color=\"success\" onClick={handleGenerateTimetable} disabled={tasks.length === 0} sx={{ mt: 2, fontWeight: 700, fontSize: 18, px: 4 }}>\n//                 Generate Timetable\n//               </Button>\n//             </Box>\n//           )}\n//           {step === 'timetable' && (\n//             <>\n//               {/* Calendar View */}\n//               <Box sx={{ display: 'flex', justifyContent: 'center', mb: 4 }}>\n//                 <LocalizationProvider dateAdapter={AdapterDateFns}>\n//                   <DateCalendar readOnly disableHighlightToday sx={{ maxWidth: 340, borderRadius: 3, boxShadow: 2, background: '#f8fafc' }} />\n//                 </LocalizationProvider>\n//               </Box>\n//               <TableContainer component={Paper} sx={{ borderRadius: 3, boxShadow: 2, mb: 2 }}>\n//                 <Table>\n//                   <TableHead>\n//                     <TableRow sx={{ background: 'linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%)' }}>\n//                       <TableCell sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>Time</TableCell>\n//                       {days.map((day, index) => (\n//                         <TableCell key={index} align=\"center\" sx={{ fontWeight: 700, fontSize: 17, color: '#263238' }}>{day}</TableCell>\n//                       ))}\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody>\n//                     {timeSlots.map((time, rowIndex) => (\n//                       <TableRow key={rowIndex}>\n//                         <TableCell sx={{ fontWeight: 600, fontSize: 15, background: '#f0f4fa' }}>{time}</TableCell>\n//                         {days.map((_, dayIndex) => (\n//                           <TableCell key={dayIndex} align=\"center\" sx={{ position: 'relative', minWidth: 180, background: '#f9fbfd', border: '1px solid #e3eaf2' }}>\n//                             <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, alignItems: 'center', minHeight: 70, justifyContent: 'center' }}>\n//                               <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontWeight: 600, fontSize: 15 }}>\n//                                 {timetable[dayIndex][rowIndex].subject || <span style={{ color: '#b0b0b0' }}>No Class</span>}\n//                               </Typography>\n//                               <Box sx={{ mt: 1 }}>\n//                                 <IconButton size=\"small\" color=\"primary\" onClick={() => handleEdit(dayIndex, rowIndex)} sx={{ mr: 1, background: '#e3eafc', '&:hover': { background: '#bbdefb' } }}>\n//                                   <Edit fontSize=\"small\" />\n//                                 </IconButton>\n//                                 <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(dayIndex, rowIndex)} sx={{ background: '#ffebee', '&:hover': { background: '#ffcdd2' } }}>\n//                                   <Delete fontSize=\"small\" />\n//                                 </IconButton>\n//                               </Box>\n//                             </Box>\n//                           </TableCell>\n//                         ))}\n//                       </TableRow>\n//                     ))}\n//                   </TableBody>\n//                 </Table>\n//               </TableContainer>\n//               <Button variant=\"outlined\" color=\"primary\" onClick={() => setStep('input')} sx={{ mt: 2, fontWeight: 600 }}>\n//                 Back to Task Input\n//               </Button>\n//             </>\n//           )}\n//           {/* Edit Dialog */}\n//           <Dialog open={!!editCell} onClose={handleDialogClose} PaperProps={{ sx: { borderRadius: 4, p: 1 } }}>\n//             <DialogTitle sx={{ fontWeight: 700, color: '#1a237e', pb: 1 }}>Edit Schedule</DialogTitle>\n//             <DialogContent sx={{ minWidth: 350, background: '#f8fafc', borderRadius: 2 }}>\n//               <TextField\n//                 margin=\"dense\"\n//                 label=\"Subject\"\n//                 name=\"subject\"\n//                 value={form.subject}\n//                 onChange={handleFormChange}\n//                 fullWidth\n//                 select\n//                 sx={{ mb: 2 }}\n//               >\n//                 <MenuItem value=\"\">No Class</MenuItem>\n//                 <MenuItem value=\"Mathematics\">Mathematics</MenuItem>\n//                 <MenuItem value=\"Physics\">Physics</MenuItem>\n//                 <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n//                 <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\n//                 <MenuItem value=\"Electronics\">Electronics</MenuItem>\n//                 <MenuItem value=\"Lunch Break\">Lunch Break</MenuItem>\n//               </TextField>\n//             </DialogContent>\n//             <DialogActions sx={{ background: '#f8fafc', borderBottomLeftRadius: 16, borderBottomRightRadius: 16 }}>\n//               <Button onClick={handleDialogClose} sx={{ fontWeight: 600 }}>Cancel</Button>\n//               <Button onClick={handleSave} variant=\"contained\" sx={{ fontWeight: 600, background: '#1976d2' }}>Save</Button>\n//             </DialogActions>\n//           </Dialog>\n//         </Card>\n//       </Container>\n//     </Box>\n//   );\n// export default Timetable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}